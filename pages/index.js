import Head from "next/head";
import { generateText } from "./api/huggingface";
import { useState, useEffect } from "react";

export default function Home() {
	const [answer, setAnswer] = useState("");
	const [country, setCountry] = useState("");
	const [isLoading, setIsLoading] = useState(false);
	const onChange = (event) => {
		setCountry(event.target.value);
		setAnswer("");
	};
	const [time, setTime] = useState(0);
	const [running, setRunning] = useState(false);

	// Stopwatch timer
	useEffect(() => {
		let interval;
		if (running) {
			interval = setInterval(() => {
				setTime((prevTime) => prevTime + 10);
			}, 10);
		} else if (!running) {
			clearInterval(interval);
		}
		return () => clearInterval(interval);
	}, [running]);

	const prompt = (
		<>
			Olet AI-avustaja, joka on todella hyvä maantiedossa. Käyttäjä nimeää maan
			ja kerrot sen olevan pääkaupunki.
			<p>
				<br></br>Käyttäjä: Norja
				<br></br>AI-avustaja: Oslo
			</p>
			<p>
				<br></br>Käyttäjä: Saksa
				<br></br>AI-avustaja: Berliini
			</p>
			<p>
				<br></br>Käyttäjä: Yhdysvallat
				<br></br>AI-avustaja: Washington, D.C.
			</p>
			<p>
				<br></br>Käyttäjä:{" "}
				{country && (
					<mark className="p-1 font-semibold text-white bg-purple-600 rounded dark:bg-purple-500">
						{country}
					</mark>
				)}
				<br></br>AI-avustaja:{" "}
				{answer && (
					<mark className="p-1 font-semibold text-white bg-red-600 rounded dark:bg-red-500">
						{answer.generated_text}
					</mark>
				)}
			</p>
		</>
	);

	const textGeneration = async () => {
		setIsLoading(true);

		const input = `Olet AI-avustaja, joka on todella hyvä maantiedossa. Käyttäjä nimeää maan
		 ja kerrot sen olevan pääkaupunki.
				
		 Käyttäjä: Norja 
		 AI-avustaja:Oslo 
		 
		 Käyttäjä: Saksa 
		 AI-avustaja: Berliini

		 Käyttäjä: Yhdysvallat
		 AI-avustaja: Washington, D.C.		
				
		 Käyttäjä: ${country}
		 AI-avustaja:`;

		const result = await generateText(input);
		setAnswer(result);
		setIsLoading(false);
		setRunning(false);
		setTime(0);
	};

	return (
		<>
			<Head>
				<title>gpt3-finnish-3B</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<div className="container mx-auto px-4 max-w-3xl">
					<h1 className="flex mt-6 items-center text-5xl font-extrabold dark:text-white">
						Model
						<span className="bg-blue-100 text-blue-800 md:text-2xl text-xl font-semibold mr-2 px-2.5 py-0.5 rounded dark:bg-blue-200 dark:text-blue-800 ml-2">
							TurkuNLP/gpt3-finnish-3B
						</span>
					</h1>
					<p className="mb-7 mt-4 text-lg font-normal text-gray-500 lg:text-xl dark:text-gray-400">
						🤗 Hugging Face:{" "}
						<a
							href="https://huggingface.co/TurkuNLP/gpt3-finnish-3B"
							className="font-medium text-blue-600 dark:text-blue-500 hover:underline"
						>
							repo
						</a>
					</p>
					<h5 className="text-xl font-bold dark:text-white">Prompt:</h5>
					<div className="p-4 my-4 bg-slate-200 rounded-xl border-2 border-slate-400">
						<code>{prompt}</code>
					</div>
					<h5 className="text-xl mb-4 font-bold dark:text-whit">
						Valitse maa:
					</h5>
					<button
						onClick={() => {
							setCountry("Suomi");
							setAnswer("");
						}}
						className="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800"
					>
						<span className="relative text-3xl px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
							🇫🇮
						</span>
					</button>
					<button
						onClick={() => {
							setCountry("Ruotsi");
							setAnswer("");
						}}
						className="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-red-200 via-red-300 to-yellow-200 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400"
					>
						<span className="relative text-3xl px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
							🇸🇪
						</span>
					</button>
					<button
						onClick={() => {
							setCountry("Tanska");
							setAnswer("");
						}}
						className="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-pink-500 to-orange-400 group-hover:from-pink-500 group-hover:to-orange-400 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800"
					>
						<span className="relative text-3xl px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
							🇩🇰
						</span>
					</button>
					<h5 className="text-xl mt-2 mb-4 font-bold dark:text-whit">
						Tai kirjoita:
					</h5>
					<div className="lg:flex lg:flex-row lg:items-end">
						<div className="pb-1.5 mr-1">
							<input
								value={country}
								onChange={onChange}
								type="text"
								id="default-input"
								className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
							/>
						</div>
						<div>
							<button
								onClick={() => {
									setRunning(true);
									textGeneration();
								}}
								type="button"
								className="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"
							>
								<span className="w-5 h-5 mr-2 -ml-1">🌍</span>
								Nimeä pääkaupunki
							</button>
						</div>
					</div>
					{isLoading && (
						<div>
							<div className="mt-3">
								<span className="bg-red-100 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-red-400 border border-red-400">
									⚠️ The model is hosted on the free Hugging Face instance,
									initial inference might take up to 1,5 minutes.
								</span>
							</div>
							<div role="status" className="mt-3 flex items-center">
								<svg
									aria-hidden="true"
									className="inline w-10 h-10 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600"
									viewBox="0 0 100 101"
									fill="none"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
										fill="currentColor"
									/>
									<path
										d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
										fill="currentFill"
									/>
								</svg>
								<div className="ml-2">
									<span>
										{("0" + Math.floor((time / 60000) % 60)).slice(-2)}:
									</span>
									<span>
										{("0" + Math.floor((time / 1000) % 60)).slice(-2)}:
									</span>
									<span>{("0" + ((time / 10) % 100)).slice(-2)}</span>
								</div>
								<span className="sr-only">Loading...</span>
							</div>
						</div>
					)}{" "}
					{answer && (
						<div className="flex mt-4 items-center">
							<h5 className="text-xl font-bold dark:text-white">
								Pääkaupunki:
							</h5>{" "}
							<span> 📍{answer.generated_text}</span>
						</div>
					)}
				</div>
			</main>
		</>
	);
}
